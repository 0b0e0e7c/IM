// Code generated by goctl. DO NOT EDIT.
// Source: friend.proto

package friendservice

import (
	"context"

	"github.com/0b0e0e7c/chat/service/friend-service/pb/friend"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddFriendRequest   = friend.AddFriendRequest
	AddFriendResponse  = friend.AddFriendResponse
	GetFriendsRequest  = friend.GetFriendsRequest
	GetFriendsResponse = friend.GetFriendsResponse

	FriendService interface {
		AddFriend(ctx context.Context, in *AddFriendRequest, opts ...grpc.CallOption) (*AddFriendResponse, error)
		GetFriends(ctx context.Context, in *GetFriendsRequest, opts ...grpc.CallOption) (*GetFriendsResponse, error)
	}

	defaultFriendService struct {
		cli zrpc.Client
	}
)

func NewFriendService(cli zrpc.Client) FriendService {
	return &defaultFriendService{
		cli: cli,
	}
}

func (m *defaultFriendService) AddFriend(ctx context.Context, in *AddFriendRequest, opts ...grpc.CallOption) (*AddFriendResponse, error) {
	client := friend.NewFriendServiceClient(m.cli.Conn())
	return client.AddFriend(ctx, in, opts...)
}

func (m *defaultFriendService) GetFriends(ctx context.Context, in *GetFriendsRequest, opts ...grpc.CallOption) (*GetFriendsResponse, error) {
	client := friend.NewFriendServiceClient(m.cli.Conn())
	return client.GetFriends(ctx, in, opts...)
}
